#! /usr/bin/env python
'''
Niema Moshiri 2016

Generate plots of Cherry Deviation vs. Correcting Threshold for various parameters
'''
# imports
from matplotlib import rcParams
from matplotlib.patches import Patch
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

# settings
sns.set_style("ticks")
sns.set_palette('muted')
rcParams['font.family'] = 'serif'
rcParams['lines.linewidth'] = 1
axisX = np.arange(0,1.01,0.1)

# data
# data from estimate-cherries.sh
y_estimate_cherries_sh = {
    # fasttree values
    'param00_fasttree':[0.21315,0.20045,0.20005,0.1997,0.1993,0.1991,0.1988,0.19855,0.19815,0.19795,0.1975,0.19705,0.19685,0.1963,0.1959,0.19525,0.19485,0.19475,0.1945,0.19435,0.19405,0.1935,0.1932,0.1928,0.1921,0.1919,0.19175,0.19145,0.19115,0.1907,0.19025,0.1898,0.1897,0.18915,0.1886,0.1882,0.1878,0.1874,0.1869,0.1864,0.1862,0.18545,0.1852,0.18475,0.1841,0.1837,0.1832,0.18285,0.1823,0.1821,0.1819,0.1815,0.18105,0.18065,0.1801,0.17955,0.1786,0.1776,0.17665,0.17575,0.17465,0.1735,0.17225,0.17085,0.16925,0.16815,0.1669,0.16535,0.1634,0.161,0.1581,0.15545,0.1524,0.14775,0.1421,0.13615,0.13165,0.12705,0.1242,0.12075,0.1181,0.11515,0.1126,0.10995,0.108,0.10565,0.10345,0.1013,0.0985,0.09545,0.0928,0.0909,0.08835,0.08555,0.0824,0.0797,0.07645,0.073,0.0679,0.0615,0.04545],
    'param01_fasttree':[0.331,0.3295,0.3295,0.3295,0.3295,0.3295,0.3294,0.3294,0.32935,0.32925,0.3292,0.3291,0.32905,0.329,0.329,0.32895,0.32885,0.3287,0.3286,0.32855,0.3284,0.32835,0.3282,0.3279,0.32775,0.3277,0.3276,0.32755,0.32755,0.3274,0.32735,0.32725,0.3272,0.32705,0.327,0.32685,0.32685,0.3267,0.32665,0.32655,0.3264,0.3262,0.3261,0.326,0.3259,0.32555,0.32535,0.32525,0.32515,0.32495,0.32495,0.3249,0.3248,0.3246,0.32455,0.32435,0.32435,0.32425,0.3239,0.3236,0.3235,0.32325,0.3232,0.32295,0.32275,0.32255,0.32235,0.3222,0.32175,0.32105,0.3209,0.32,0.31915,0.31775,0.31615,0.31385,0.31195,0.31015,0.30865,0.30715,0.3058,0.30455,0.30295,0.3016,0.30015,0.29875,0.29675,0.2935,0.29015,0.28685,0.2838,0.27955,0.27445,0.2689,0.2627,0.25615,0.2479,0.23675,0.22205,0.19625,0.11095],
    'param02_fasttree':[0.249,0.24525,0.2452,0.24515,0.2451,0.245,0.2448,0.24475,0.24475,0.24455,0.24435,0.2443,0.24425,0.24415,0.2439,0.24385,0.2438,0.2437,0.2437,0.24355,0.24345,0.2434,0.24325,0.2431,0.243,0.243,0.2429,0.2427,0.24255,0.2425,0.2422,0.2419,0.24185,0.24175,0.2417,0.2413,0.24105,0.24085,0.24065,0.2403,0.24,0.23995,0.23985,0.2397,0.2396,0.23955,0.23945,0.23925,0.239,0.2388,0.2385,0.23835,0.2382,0.23795,0.23785,0.23775,0.23755,0.23745,0.23705,0.23675,0.23635,0.23595,0.23545,0.23495,0.23425,0.2335,0.23315,0.2326,0.23215,0.23155,0.2306,0.22975,0.22865,0.2268,0.2244,0.2222,0.2201,0.2181,0.2165,0.21535,0.21445,0.21325,0.21255,0.2117,0.2106,0.2095,0.20825,0.2064,0.2044,0.20185,0.2001,0.19735,0.1944,0.1917,0.1873,0.18145,0.17465,0.1675,0.15565,0.1375,0.084],
    'param03_fasttree':[0.27555,0.2536,0.25335,0.253,0.2528,0.25255,0.2519,0.2515,0.25115,0.2509,0.2506,0.25015,0.24935,0.24905,0.2486,0.24825,0.24795,0.2477,0.2473,0.2469,0.24645,0.24615,0.2457,0.24525,0.24495,0.24445,0.244,0.24355,0.24315,0.2422,0.24165,0.2408,0.24025,0.2397,0.23905,0.2386,0.23785,0.2371,0.2367,0.2362,0.23555,0.23465,0.2339,0.2332,0.2326,0.23185,0.23135,0.23045,0.2295,0.22905,0.2286,0.2283,0.22765,0.2271,0.22625,0.22545,0.22405,0.2231,0.22155,0.22035,0.2188,0.21675,0.2145,0.2119,0.2096,0.20745,0.20465,0.20225,0.19955,0.19575,0.19195,0.1879,0.18125,0.17365,0.16285,0.1504,0.1394,0.1304,0.1227,0.1161,0.10985,0.1027,0.0973,0.0919,0.08665,0.0818,0.07695,0.0714,0.06605,0.0609,0.0553,0.05075,0.04525,0.0405,0.03765,0.03495,0.0323,0.03075,0.02905,0.02755,0.0248],
    'param04_fasttree':[0.3216,0.3002,0.29995,0.2996,0.29945,0.29925,0.2991,0.2989,0.2984,0.2981,0.29765,0.2974,0.29725,0.2971,0.2967,0.2958,0.29545,0.295,0.2946,0.29385,0.2936,0.29335,0.29265,0.292,0.2913,0.29105,0.2905,0.2899,0.28945,0.28905,0.2885,0.288,0.28735,0.2865,0.286,0.2855,0.2846,0.2841,0.28305,0.2823,0.28145,0.28095,0.2802,0.27945,0.27895,0.278,0.27735,0.27665,0.27635,0.27575,0.27515,0.2743,0.2737,0.27315,0.272,0.2712,0.2702,0.2693,0.26795,0.26665,0.26565,0.26365,0.26215,0.26055,0.25855,0.25635,0.25415,0.25205,0.24955,0.2468,0.2432,0.2384,0.2325,0.22315,0.2095,0.19535,0.18005,0.1663,0.15415,0.14375,0.1346,0.1261,0.1178,0.10995,0.1016,0.0938,0.08645,0.0779,0.06845,0.06105,0.05355,0.0458,0.0388,0.03275,0.0287,0.027,0.02515,0.0233,0.02235,0.0206,0.0185],
    'param05_fasttree':[0.1919,0.1895,0.18925,0.1889,0.1882,0.1878,0.1872,0.1866,0.1861,0.18555,0.18465,0.1842,0.1835,0.183,0.1823,0.18175,0.1812,0.1807,0.17985,0.1792,0.1785,0.1776,0.17715,0.17695,0.17625,0.1756,0.175,0.17445,0.1739,0.1733,0.1728,0.17215,0.172,0.17135,0.1709,0.17045,0.16975,0.1692,0.16865,0.1684,0.1677,0.1671,0.16645,0.1659,0.16545,0.1652,0.16485,0.1639,0.16335,0.16275,0.16225,0.1613,0.16065,0.16015,0.15945,0.1583,0.15695,0.1555,0.15425,0.15285,0.15125,0.1499,0.14795,0.146,0.14465,0.1429,0.1412,0.1389,0.1364,0.1343,0.13225,0.12945,0.1268,0.1244,0.12105,0.1186,0.11635,0.1137,0.1113,0.10895,0.10675,0.1046,0.1025,0.1006,0.099,0.0976,0.0964,0.0951,0.094,0.09325,0.09275,0.0919,0.0914,0.091,0.0904,0.0897,0.08885,0.08765,0.08535,0.07995,0.0534],
    'param06_fasttree':[0.1967,0.19275,0.19235,0.192,0.19185,0.19135,0.19085,0.1905,0.19025,0.19,0.18955,0.1892,0.1886,0.18795,0.1876,0.18725,0.1869,0.18655,0.1863,0.18605,0.1858,0.1852,0.1846,0.1842,0.1837,0.1832,0.18275,0.18235,0.1821,0.18165,0.1812,0.18065,0.18,0.1796,0.17925,0.17865,0.1779,0.17735,0.17695,0.1761,0.1755,0.17485,0.17415,0.1737,0.17335,0.1728,0.1723,0.17185,0.1715,0.1712,0.1706,0.16995,0.1694,0.16855,0.168,0.1671,0.16625,0.16495,0.1633,0.16215,0.1607,0.15915,0.1572,0.15545,0.15365,0.15185,0.1498,0.1476,0.14545,0.14345,0.14125,0.1389,0.13605,0.13255,0.12855,0.12525,0.12165,0.1181,0.11525,0.11235,0.10955,0.10675,0.1049,0.1032,0.10145,0.09975,0.09835,0.0969,0.0953,0.0936,0.09175,0.0905,0.089,0.08785,0.08625,0.0845,0.08215,0.07945,0.0747,0.067,0.04585],
    'param07_fasttree':[0.23995,0.2111,0.21085,0.2106,0.2103,0.2101,0.2099,0.2098,0.20955,0.2089,0.20865,0.2084,0.20785,0.2076,0.2073,0.20685,0.20655,0.20645,0.20615,0.2057,0.2054,0.2052,0.2047,0.20415,0.20375,0.20345,0.20305,0.20275,0.20215,0.20185,0.20125,0.2009,0.20045,0.20025,0.19975,0.1994,0.19895,0.19845,0.19815,0.19755,0.19735,0.1971,0.1967,0.19615,0.19555,0.19505,0.1946,0.19415,0.1937,0.1934,0.19295,0.19245,0.1921,0.19175,0.19145,0.19085,0.1903,0.18965,0.18865,0.18795,0.1871,0.1864,0.18565,0.1848,0.18385,0.1833,0.18225,0.181,0.1796,0.17815,0.1764,0.1746,0.17185,0.16685,0.16055,0.1535,0.14675,0.1403,0.1362,0.13165,0.12835,0.12595,0.1228,0.12035,0.1179,0.11445,0.11185,0.1087,0.10525,0.10175,0.09735,0.0935,0.08855,0.0847,0.08105,0.07765,0.07365,0.07005,0.0659,0.06185,0.05295],
    'param08_fasttree':[0.2654,0.20725,0.20705,0.20685,0.2067,0.20665,0.20635,0.20625,0.2062,0.206,0.2056,0.2053,0.20515,0.20505,0.2048,0.2044,0.204,0.20365,0.20335,0.20315,0.2029,0.2026,0.20225,0.2019,0.2016,0.20125,0.20085,0.2006,0.2003,0.19975,0.19945,0.1991,0.19855,0.19815,0.19785,0.1976,0.1975,0.19705,0.19685,0.19655,0.19605,0.1956,0.19515,0.19495,0.19425,0.19385,0.1933,0.1931,0.19285,0.1925,0.19225,0.19205,0.1918,0.1915,0.1911,0.19075,0.1903,0.18975,0.1894,0.18885,0.1884,0.18745,0.18655,0.1857,0.18505,0.1846,0.18375,0.1833,0.18255,0.182,0.1808,0.17975,0.1775,0.17375,0.16825,0.16115,0.15555,0.14935,0.1446,0.14105,0.13825,0.13575,0.1341,0.13185,0.12895,0.12525,0.12095,0.11765,0.11355,0.11065,0.1076,0.10505,0.10085,0.0974,0.09515,0.0936,0.0917,0.0904,0.08875,0.0869,0.0828],
    'param09_fasttree':[0.26995,0.2629,0.26285,0.2628,0.26265,0.26265,0.26245,0.2623,0.26225,0.2619,0.2616,0.26125,0.26105,0.26075,0.2605,0.2602,0.25985,0.25975,0.2596,0.25945,0.2591,0.2588,0.2586,0.25815,0.258,0.2578,0.2576,0.2571,0.257,0.2567,0.25625,0.2557,0.25555,0.25545,0.25505,0.25475,0.25405,0.2535,0.25295,0.25235,0.25195,0.25125,0.25075,0.25005,0.2498,0.2493,0.24905,0.24825,0.24795,0.2473,0.24665,0.24635,0.24585,0.24555,0.2452,0.24455,0.24395,0.2434,0.2428,0.24215,0.2411,0.24035,0.2395,0.23855,0.2375,0.2366,0.23555,0.2338,0.23275,0.23115,0.22995,0.22845,0.22655,0.2239,0.22035,0.215,0.2099,0.2023,0.196,0.19015,0.1843,0.18015,0.17665,0.17265,0.16825,0.1616,0.15445,0.1469,0.1396,0.13135,0.1243,0.118,0.1113,0.1048,0.10175,0.0993,0.097,0.09485,0.0934,0.09205,0.09125],
    'param10_fasttree':[0.2609,0.25095,0.25085,0.2505,0.25015,0.24965,0.2495,0.2492,0.249,0.24885,0.24845,0.2481,0.24765,0.24735,0.24685,0.24645,0.2459,0.2454,0.24515,0.24475,0.2442,0.24405,0.2437,0.2433,0.243,0.24255,0.2424,0.24215,0.2418,0.2411,0.2407,0.24045,0.2398,0.23925,0.23875,0.23845,0.2379,0.23745,0.2365,0.23615,0.23565,0.2351,0.23435,0.2339,0.23335,0.23285,0.2322,0.2319,0.2315,0.2309,0.23045,0.22995,0.2295,0.22905,0.22845,0.22785,0.2271,0.2262,0.2252,0.2247,0.22395,0.22265,0.22185,0.2207,0.21935,0.218,0.21675,0.2149,0.21345,0.21225,0.2104,0.2078,0.20405,0.2001,0.19495,0.1875,0.17955,0.17155,0.16475,0.15965,0.15415,0.15,0.14675,0.14275,0.1383,0.13305,0.12815,0.12275,0.1163,0.11065,0.1056,0.1005,0.09545,0.09025,0.08645,0.0833,0.0796,0.07685,0.0735,0.0698,0.06515],
    'param11_fasttree':[0.23585,0.22045,0.2203,0.2199,0.2196,0.2192,0.21905,0.21885,0.21855,0.21795,0.2176,0.21725,0.21665,0.21625,0.2157,0.21555,0.21545,0.21515,0.2146,0.2144,0.214,0.2135,0.2129,0.21235,0.21195,0.2117,0.2115,0.211,0.2103,0.2098,0.2094,0.2091,0.20885,0.20835,0.20785,0.20715,0.20655,0.20615,0.20575,0.2052,0.2048,0.20455,0.2041,0.2035,0.20295,0.20215,0.2018,0.2013,0.2007,0.2005,0.2001,0.1999,0.19965,0.19905,0.19805,0.19725,0.19665,0.1954,0.1938,0.1925,0.19145,0.18985,0.1885,0.18695,0.1851,0.1833,0.18155,0.1802,0.17835,0.1765,0.1745,0.17185,0.1681,0.16345,0.1573,0.15035,0.1442,0.1372,0.1321,0.12745,0.1236,0.11985,0.11695,0.1138,0.11065,0.1079,0.10495,0.1024,0.09955,0.0958,0.0925,0.08925,0.0863,0.08275,0.0791,0.0748,0.07165,0.06755,0.06315,0.0582,0.04815],
    'param12_fasttree':[0.18085,0.17375,0.1734,0.1732,0.17295,0.1727,0.1725,0.17225,0.1719,0.1716,0.1715,0.17105,0.1708,0.1706,0.1704,0.17015,0.1698,0.16955,0.1691,0.1688,0.1687,0.1683,0.16815,0.1679,0.1677,0.16745,0.1671,0.16635,0.1662,0.16585,0.1655,0.1649,0.16455,0.1642,0.16365,0.16335,0.16305,0.16265,0.1621,0.16175,0.1614,0.1608,0.1603,0.1599,0.15935,0.1588,0.15855,0.15835,0.15815,0.15805,0.1579,0.15765,0.1574,0.15705,0.15635,0.1558,0.15515,0.1541,0.1532,0.15205,0.15095,0.1492,0.14835,0.14755,0.14625,0.1451,0.14335,0.1422,0.14055,0.1387,0.13675,0.13435,0.1318,0.12825,0.12355,0.1196,0.1164,0.1132,0.11105,0.1088,0.10695,0.1054,0.10405,0.1028,0.1014,0.0999,0.0987,0.09745,0.0958,0.09385,0.09245,0.0908,0.0897,0.08835,0.08695,0.0859,0.0842,0.0821,0.0786,0.07245,0.052],
    'param13_fasttree':[0.1513,0.1472,0.147,0.1467,0.14635,0.14625,0.14595,0.14565,0.14545,0.1454,0.145,0.1445,0.14425,0.1439,0.14345,0.14325,0.14295,0.1427,0.1425,0.14215,0.1418,0.1417,0.14145,0.1413,0.14115,0.14085,0.14065,0.1405,0.1401,0.13975,0.1396,0.1395,0.1393,0.139,0.13875,0.13855,0.138,0.13755,0.13715,0.13685,0.13675,0.1366,0.1362,0.1357,0.13545,0.1351,0.135,0.1348,0.13475,0.13465,0.1345,0.13395,0.13385,0.1337,0.133,0.13255,0.13225,0.1318,0.13115,0.1301,0.12925,0.12815,0.1274,0.12615,0.12505,0.12435,0.12315,0.12245,0.1215,0.12005,0.11865,0.1175,0.1157,0.11355,0.1113,0.10885,0.1068,0.1052,0.10345,0.1018,0.10065,0.0998,0.09925,0.09805,0.0974,0.09655,0.0959,0.09505,0.09395,0.09335,0.09265,0.09205,0.09135,0.0908,0.09025,0.08945,0.0891,0.08815,0.0872,0.0849,0.0703],
    'param14_fasttree':[0.1276,0.12675,0.12655,0.12635,0.1261,0.126,0.1257,0.12525,0.1251,0.125,0.12485,0.12455,0.1244,0.12415,0.1239,0.12375,0.12365,0.12365,0.1233,0.1232,0.123,0.123,0.12265,0.12255,0.1224,0.1221,0.1218,0.1214,0.12125,0.12105,0.1209,0.1208,0.1204,0.12015,0.12,0.1198,0.11975,0.1196,0.1192,0.11905,0.11885,0.11875,0.1187,0.1185,0.1182,0.11795,0.1175,0.1173,0.11715,0.11705,0.11695,0.1169,0.11655,0.1161,0.11605,0.1159,0.1158,0.11515,0.11445,0.1137,0.1131,0.1124,0.1115,0.11075,0.1102,0.1097,0.10895,0.1084,0.10775,0.10715,0.1065,0.1052,0.1041,0.10245,0.1014,0.0999,0.09885,0.09805,0.09735,0.097,0.0963,0.0959,0.09505,0.09465,0.09425,0.09375,0.0933,0.09285,0.09235,0.092,0.0917,0.09135,0.09105,0.0908,0.09045,0.0901,0.08975,0.08935,0.08895,0.08785,0.08345],
    'param15_fasttree':[0.11385,0.1132,0.1131,0.11295,0.1129,0.11275,0.1125,0.11235,0.11195,0.11185,0.11165,0.1114,0.11125,0.1109,0.1108,0.1107,0.11035,0.11015,0.11005,0.1097,0.10955,0.10945,0.10925,0.1091,0.109,0.10895,0.10885,0.1087,0.1086,0.10845,0.10835,0.1081,0.1079,0.10775,0.1075,0.1073,0.1071,0.1069,0.1068,0.1067,0.1066,0.1063,0.1061,0.106,0.10575,0.10565,0.1054,0.10535,0.1053,0.10525,0.1051,0.1048,0.1046,0.10435,0.1042,0.10405,0.10385,0.1034,0.10295,0.1024,0.1022,0.1018,0.10165,0.10135,0.10095,0.10055,0.1002,0.0997,0.0987,0.09815,0.0976,0.0973,0.0965,0.0958,0.09515,0.09465,0.09435,0.09375,0.09325,0.0927,0.0924,0.092,0.09165,0.0914,0.09105,0.09075,0.09035,0.09015,0.0899,0.0898,0.08945,0.0894,0.0892,0.0891,0.08885,0.08875,0.0887,0.08855,0.08855,0.08825,0.08715],
    'param16_fasttree':[0.21695,0.20175,0.2012,0.20085,0.20055,0.2003,0.2,0.19985,0.1997,0.19945,0.1992,0.199,0.19875,0.1983,0.1979,0.19755,0.19725,0.19695,0.1967,0.1963,0.19605,0.1959,0.1958,0.1954,0.19515,0.19485,0.1946,0.1941,0.1938,0.1932,0.193,0.1926,0.19225,0.1917,0.1914,0.19085,0.19075,0.19045,0.1901,0.1897,0.18925,0.18905,0.18875,0.18845,0.1881,0.188,0.18725,0.1868,0.1863,0.1858,0.1854,0.1852,0.1847,0.1841,0.1831,0.18245,0.1816,0.18045,0.17895,0.1778,0.17675,0.1756,0.1742,0.17315,0.17175,0.17035,0.169,0.1672,0.1653,0.16325,0.16165,0.1589,0.15535,0.15075,0.1454,0.13945,0.13355,0.12865,0.12445,0.12065,0.11745,0.1148,0.11235,0.11025,0.10785,0.10535,0.10275,0.10035,0.09765,0.0951,0.0928,0.0906,0.08795,0.0851,0.08255,0.0797,0.07615,0.0728,0.06805,0.0613,0.0478],
    'param17_fasttree':[0.21435,0.20045,0.2002,0.2001,0.19985,0.1996,0.1994,0.19905,0.19875,0.19865,0.1984,0.19795,0.1976,0.19735,0.1969,0.1967,0.1965,0.1962,0.19605,0.19555,0.19515,0.1948,0.19425,0.19395,0.1935,0.19305,0.19245,0.1921,0.1919,0.1913,0.1911,0.19065,0.19,0.18945,0.189,0.18845,0.1882,0.1876,0.18735,0.1868,0.18635,0.18585,0.1852,0.1849,0.18455,0.18415,0.1837,0.18315,0.18275,0.1824,0.18175,0.1813,0.18095,0.1803,0.17955,0.179,0.1781,0.177,0.17575,0.17445,0.17315,0.17195,0.1705,0.16955,0.16795,0.1666,0.1649,0.16325,0.1616,0.1596,0.1575,0.1548,0.15155,0.14715,0.14195,0.13645,0.13,0.1255,0.1215,0.1176,0.1152,0.11195,0.11005,0.108,0.10595,0.1033,0.1017,0.0997,0.097,0.09445,0.09195,0.08925,0.08595,0.08215,0.07925,0.07665,0.07325,0.0701,0.0649,0.0582,0.0441],
    'param18_fasttree':[0.21345,0.20085,0.20065,0.2005,0.20015,0.1999,0.19965,0.1994,0.199,0.19865,0.19815,0.1977,0.19725,0.1968,0.1966,0.19605,0.19595,0.19535,0.1949,0.19455,0.1943,0.1941,0.1938,0.19355,0.19305,0.19275,0.19245,0.1921,0.19155,0.1911,0.1907,0.1903,0.1898,0.1897,0.1893,0.1888,0.1884,0.188,0.1877,0.18745,0.187,0.1866,0.1861,0.18525,0.18465,0.184,0.18375,0.1829,0.18245,0.18205,0.18145,0.18095,0.18075,0.18035,0.17965,0.1786,0.17775,0.17695,0.17615,0.17555,0.17425,0.1734,0.1717,0.17015,0.16885,0.1672,0.16505,0.16335,0.1615,0.1591,0.1565,0.15365,0.14965,0.145,0.1401,0.13325,0.12845,0.12345,0.1199,0.11685,0.11425,0.1116,0.1092,0.1073,0.1049,0.1027,0.10065,0.09845,0.0964,0.09425,0.09215,0.0893,0.08635,0.0834,0.0804,0.0766,0.07295,0.06815,0.0624,0.0554,0.0422],
    'param19_fasttree':[0.2122,0.19815,0.1981,0.19765,0.1973,0.1971,0.19675,0.19645,0.1963,0.196,0.1956,0.1953,0.19505,0.19465,0.19445,0.19435,0.19385,0.19345,0.1929,0.1926,0.1921,0.19195,0.1913,0.19095,0.1908,0.19065,0.19025,0.1898,0.1895,0.18895,0.1883,0.18795,0.1877,0.18725,0.1867,0.1864,0.18605,0.18535,0.18485,0.18415,0.1836,0.18335,0.1829,0.1824,0.182,0.1816,0.18135,0.181,0.18055,0.1802,0.17975,0.17945,0.1789,0.1783,0.1777,0.177,0.1762,0.1753,0.17425,0.1735,0.1721,0.17035,0.1691,0.16765,0.16625,0.16495,0.1634,0.1621,0.16,0.158,0.1554,0.1526,0.1494,0.14505,0.1389,0.13355,0.1281,0.12425,0.1206,0.11765,0.11485,0.11255,0.11035,0.10835,0.10575,0.10385,0.10165,0.09985,0.09645,0.09355,0.0906,0.08795,0.08585,0.083,0.08065,0.0771,0.0732,0.06895,0.06305,0.05675,0.04315],
    'param20_fasttree':[0.2136,0.2004,0.2002,0.19995,0.19975,0.1996,0.1992,0.1989,0.1987,0.1983,0.198,0.1979,0.19755,0.1971,0.19685,0.1963,0.19625,0.19605,0.1958,0.19555,0.19515,0.19475,0.1945,0.1942,0.1938,0.1934,0.193,0.1928,0.1923,0.1918,0.1915,0.19115,0.1907,0.1903,0.18995,0.18945,0.18895,0.1883,0.18775,0.1874,0.187,0.1866,0.18605,0.18575,0.18515,0.18475,0.1843,0.18385,0.1836,0.18335,0.18295,0.1827,0.1822,0.18165,0.18135,0.18055,0.1796,0.1783,0.177,0.17595,0.175,0.17395,0.1731,0.17185,0.1701,0.16835,0.1669,0.16515,0.1636,0.1617,0.1589,0.1561,0.15255,0.14845,0.14355,0.1369,0.1312,0.1267,0.12215,0.1192,0.11605,0.11355,0.1113,0.109,0.10645,0.1041,0.1022,0.1002,0.0974,0.09505,0.09275,0.08985,0.0875,0.08455,0.08205,0.07895,0.07435,0.0699,0.064,0.0575,0.0446],
    'param21_fasttree':[0.32515,0.30635,0.3063,0.30625,0.30625,0.3062,0.30615,0.30615,0.30615,0.30615,0.30615,0.30615,0.30605,0.30605,0.30585,0.3058,0.3058,0.3057,0.30565,0.3056,0.3054,0.30535,0.3053,0.30515,0.30505,0.3049,0.3048,0.30475,0.30465,0.30465,0.30465,0.30455,0.3045,0.30445,0.30435,0.30425,0.30415,0.30405,0.30395,0.30385,0.3036,0.3034,0.3029,0.30275,0.3027,0.3025,0.30245,0.3023,0.30225,0.30225,0.30215,0.302,0.30195,0.30185,0.30175,0.30155,0.3014,0.3013,0.30115,0.30105,0.30095,0.30085,0.30085,0.3006,0.30055,0.3004,0.3003,0.3002,0.30015,0.29995,0.2996,0.29945,0.29915,0.29775,0.29565,0.293,0.28875,0.2834,0.27785,0.2724,0.2691,0.26645,0.2647,0.26305,0.2608,0.2578,0.2528,0.2472,0.2392,0.23275,0.22545,0.22005,0.2119,0.20175,0.1912,0.1831,0.17175,0.1608,0.14745,0.13605,0.11685],
    'param22_fasttree':[0.26455,0.24455,0.2443,0.24425,0.24415,0.24405,0.244,0.24395,0.24375,0.2437,0.24355,0.24355,0.2434,0.24335,0.24325,0.24295,0.2429,0.2427,0.2426,0.2425,0.24245,0.2423,0.24225,0.24215,0.24205,0.24195,0.2419,0.24185,0.24175,0.24175,0.24175,0.2416,0.2414,0.24135,0.24115,0.24095,0.2409,0.2409,0.2407,0.24065,0.2406,0.2404,0.2402,0.23995,0.2398,0.23955,0.2392,0.2389,0.2386,0.2384,0.23835,0.2383,0.23825,0.23805,0.2378,0.23765,0.2376,0.2374,0.23725,0.23715,0.23695,0.23675,0.2363,0.236,0.2358,0.23565,0.2353,0.2349,0.23465,0.23435,0.234,0.2336,0.23245,0.23105,0.2288,0.22585,0.22215,0.2191,0.2154,0.2123,0.20955,0.2083,0.207,0.20525,0.20375,0.20185,0.19915,0.196,0.19145,0.18615,0.1816,0.17755,0.1714,0.16415,0.15675,0.1483,0.13985,0.13025,0.1192,0.1054,0.08145],
    'param23_fasttree':[0.24235,0.236,0.23525,0.23475,0.2342,0.23385,0.2334,0.2326,0.23225,0.23145,0.23055,0.22985,0.2294,0.2288,0.2283,0.2277,0.22715,0.2265,0.22575,0.22505,0.2246,0.22415,0.22385,0.22305,0.2223,0.22175,0.2214,0.22055,0.2199,0.2193,0.2185,0.21775,0.21725,0.2169,0.2163,0.21585,0.2152,0.21455,0.21405,0.21305,0.21245,0.21095,0.2097,0.2091,0.208,0.20705,0.20625,0.20555,0.20445,0.20375,0.2028,0.20185,0.20085,0.19985,0.1989,0.19745,0.19515,0.1933,0.19135,0.18895,0.18675,0.1842,0.18135,0.1784,0.1752,0.171,0.16735,0.16365,0.15965,0.15585,0.1514,0.1464,0.1406,0.13405,0.12645,0.1184,0.11085,0.10325,0.0963,0.0906,0.08415,0.07825,0.07345,0.06835,0.0643,0.06035,0.05575,0.05165,0.0479,0.0446,0.04165,0.03885,0.03685,0.0349,0.03305,0.0315,0.03025,0.02855,0.02615,0.0233,0.01895],
    'param24_fasttree':[0.29145,0.28695,0.2864,0.28585,0.2853,0.28445,0.2841,0.2832,0.28255,0.28185,0.28115,0.28065,0.27975,0.27875,0.27805,0.2772,0.2759,0.2752,0.27475,0.27405,0.27315,0.2723,0.27175,0.2708,0.2699,0.26925,0.2684,0.2674,0.2664,0.26565,0.26435,0.26295,0.2621,0.26115,0.2599,0.25895,0.25815,0.2568,0.2552,0.25385,0.25275,0.25145,0.2503,0.24925,0.2484,0.2472,0.2456,0.2443,0.24315,0.2419,0.24035,0.23945,0.23805,0.23655,0.23495,0.2328,0.23065,0.2285,0.2257,0.2231,0.22,0.2171,0.21405,0.2103,0.20615,0.2025,0.198,0.19225,0.1865,0.1807,0.175,0.16905,0.16165,0.1538,0.14485,0.1359,0.12625,0.1169,0.10805,0.09825,0.0888,0.08,0.0719,0.0645,0.05755,0.0499,0.04325,0.0371,0.03175,0.0268,0.0225,0.0194,0.01695,0.0147,0.01345,0.01235,0.0114,0.0103,0.00915,0.00805,0.006],

    # RAxML values
    'param00_raxml':[0.21035,0.14935,0.14935,0.14935,0.14935,0.14935,0.14935,0.14935,0.1493,0.14925,0.1492,0.14915,0.149,0.14885,0.1487,0.1486,0.14845,0.1483,0.14815,0.14805,0.1478,0.1477,0.1474,0.14705,0.1469,0.1467,0.14655,0.14605,0.1457,0.1455,0.1454,0.145,0.14445,0.14425,0.144,0.14375,0.1435,0.1432,0.14295,0.14255,0.1424,0.142,0.1418,0.1417,0.14135,0.1409,0.1408,0.1406,0.1405,0.14025,0.14005,0.1399,0.1398,0.1396,0.13935,0.1392,0.13895,0.1387,0.1385,0.1384,0.13825,0.1381,0.1377,0.13725,0.13635,0.135,0.1341,0.1332,0.13155,0.1297,0.12775,0.12555,0.1228,0.12005,0.1153,0.11055,0.1062,0.10245,0.0994,0.0975,0.09535,0.09315,0.092,0.0906,0.0892,0.08755,0.0868,0.08555,0.08455,0.08345,0.0823,0.08105,0.0792,0.0772,0.0748,0.0724,0.0685,0.0644,0.05895,0.05145,0.0408],
    'param01_raxml':[0.33005,0.3229,0.3229,0.3229,0.3229,0.32285,0.32285,0.32285,0.3228,0.3228,0.3228,0.32275,0.32275,0.32275,0.32265,0.3226,0.3226,0.32255,0.3225,0.3225,0.3225,0.32235,0.32225,0.32215,0.32205,0.32205,0.32205,0.322,0.32195,0.3219,0.32185,0.32185,0.32175,0.3217,0.3217,0.3216,0.3215,0.3213,0.3212,0.32105,0.32095,0.32075,0.32065,0.32045,0.3202,0.3202,0.32015,0.3201,0.3201,0.31995,0.3199,0.3197,0.3196,0.31945,0.3194,0.3194,0.31935,0.31925,0.31925,0.31925,0.3192,0.319,0.31895,0.31875,0.31865,0.3186,0.31835,0.31815,0.318,0.31765,0.317,0.31655,0.3159,0.31495,0.3138,0.3116,0.30945,0.3074,0.30645,0.3048,0.3034,0.3025,0.30125,0.2996,0.29835,0.29725,0.2953,0.2922,0.28905,0.2859,0.2826,0.27845,0.2743,0.2693,0.2632,0.25655,0.24875,0.2379,0.2241,0.20245,0.1567],
    'param02_raxml':[0.24895,0.2309,0.2309,0.2309,0.2309,0.2309,0.2309,0.23085,0.23085,0.23085,0.23075,0.23075,0.23065,0.23065,0.2305,0.2305,0.2305,0.23045,0.23035,0.2302,0.2302,0.23015,0.23,0.2299,0.2298,0.2297,0.22965,0.2296,0.22955,0.2295,0.2293,0.2293,0.22925,0.22905,0.22895,0.22885,0.2287,0.22855,0.22845,0.2283,0.2281,0.22795,0.2279,0.22785,0.2277,0.2276,0.22735,0.22725,0.2272,0.2271,0.227,0.22695,0.22685,0.2267,0.22665,0.2265,0.2264,0.22635,0.2262,0.2262,0.22605,0.22585,0.2257,0.2257,0.22545,0.22515,0.22485,0.22435,0.22405,0.2237,0.22315,0.22245,0.2218,0.22055,0.21915,0.2173,0.2152,0.21365,0.21215,0.2109,0.21005,0.20885,0.2083,0.2078,0.20705,0.2063,0.20515,0.20355,0.20215,0.20005,0.19805,0.19565,0.19265,0.1898,0.1858,0.18015,0.17355,0.1653,0.15425,0.1378,0.1076],
    'param03_raxml':[0.27975,0.1632,0.1632,0.1632,0.1632,0.1632,0.1632,0.1631,0.16305,0.16295,0.16285,0.16275,0.16265,0.16245,0.1622,0.162,0.162,0.1618,0.1615,0.16135,0.161,0.1607,0.16045,0.16,0.15975,0.1596,0.1592,0.159,0.15875,0.1582,0.1578,0.15755,0.15715,0.15665,0.1561,0.15585,0.15555,0.15495,0.1542,0.15405,0.15355,0.1531,0.15275,0.1524,0.152,0.15155,0.1513,0.15115,0.15075,0.15035,0.14985,0.1494,0.14895,0.14845,0.14825,0.1479,0.1477,0.1473,0.14705,0.1467,0.1465,0.14625,0.1457,0.14475,0.14375,0.1422,0.14055,0.13855,0.1361,0.1328,0.12775,0.12355,0.1182,0.1112,0.1037,0.0917,0.0803,0.0694,0.0611,0.0551,0.05005,0.04575,0.04285,0.03935,0.0363,0.03375,0.03115,0.0297,0.0285,0.02725,0.02625,0.02545,0.0244,0.0231,0.02155,0.0206,0.01925,0.018,0.01675,0.0153,0.01325],
    'param04_raxml':[0.33235,0.21145,0.21145,0.21145,0.21145,0.21145,0.21145,0.21135,0.2112,0.2111,0.21085,0.2107,0.21065,0.21055,0.2103,0.2102,0.20975,0.2093,0.2091,0.20855,0.2084,0.20785,0.2075,0.20735,0.2071,0.20665,0.2063,0.206,0.2057,0.20535,0.205,0.2045,0.2041,0.20355,0.2029,0.2023,0.20175,0.2013,0.20075,0.2003,0.1996,0.19905,0.1984,0.1978,0.1974,0.19665,0.19635,0.19595,0.19545,0.1951,0.19475,0.1942,0.1939,0.1935,0.19335,0.19305,0.19285,0.1924,0.19215,0.19185,0.19175,0.19115,0.19055,0.18995,0.18875,0.1877,0.18555,0.1837,0.181,0.17845,0.1749,0.17095,0.1652,0.15595,0.14385,0.12915,0.1115,0.0937,0.07875,0.06775,0.05775,0.05125,0.04375,0.0369,0.03075,0.0252,0.01965,0.0155,0.0126,0.01065,0.00985,0.00895,0.0082,0.00725,0.0062,0.0059,0.0055,0.0054,0.0052,0.00485,0.00425],
    'param05_raxml':[0.1865,0.1593,0.1593,0.1593,0.1593,0.1593,0.1593,0.1593,0.15925,0.1592,0.1591,0.1591,0.159,0.1588,0.1584,0.1581,0.1577,0.1574,0.15715,0.1567,0.15655,0.15615,0.156,0.15565,0.15545,0.155,0.1547,0.15435,0.1542,0.1536,0.1533,0.153,0.15265,0.15255,0.15215,0.1518,0.1513,0.1509,0.15045,0.15025,0.14985,0.14935,0.1491,0.1488,0.14835,0.14805,0.1477,0.1473,0.14695,0.1464,0.1461,0.1459,0.1457,0.14535,0.1452,0.14495,0.1447,0.14415,0.1436,0.14325,0.14255,0.14195,0.14115,0.13975,0.1386,0.1371,0.13535,0.1339,0.13175,0.13,0.1278,0.12545,0.12355,0.12075,0.1181,0.1152,0.11215,0.11,0.1079,0.1057,0.10335,0.1017,0.09965,0.09805,0.09645,0.0953,0.094,0.0931,0.0925,0.09185,0.09115,0.09055,0.09015,0.0896,0.08935,0.0886,0.0879,0.0866,0.08445,0.08055,0.0691],
    'param06_raxml':[0.1913,0.1524,0.1524,0.1524,0.1524,0.1524,0.1524,0.1524,0.1523,0.1522,0.15215,0.15215,0.152,0.15185,0.15175,0.1514,0.15125,0.1512,0.15085,0.1504,0.15015,0.1499,0.1496,0.14935,0.149,0.14875,0.1482,0.1479,0.14775,0.1472,0.14685,0.14645,0.1463,0.146,0.1455,0.145,0.1447,0.14435,0.1442,0.14405,0.14395,0.14355,0.14325,0.1431,0.1427,0.14235,0.1421,0.1419,0.14145,0.14125,0.1411,0.14095,0.14085,0.1406,0.14025,0.13985,0.1397,0.13935,0.13915,0.1389,0.13825,0.13765,0.13715,0.13645,0.1356,0.13435,0.13305,0.13125,0.1294,0.1271,0.12505,0.12295,0.12015,0.1175,0.1143,0.1105,0.10795,0.10535,0.1026,0.0997,0.09785,0.0965,0.09545,0.09395,0.09275,0.09175,0.0905,0.0896,0.08875,0.08805,0.08725,0.08655,0.08575,0.0847,0.08355,0.08215,0.08045,0.0782,0.07395,0.06685,0.0535],
    'param07_raxml':[0.24205,0.14365,0.14365,0.14365,0.14365,0.14365,0.1436,0.14355,0.14345,0.14335,0.14325,0.14315,0.1431,0.143,0.14295,0.1429,0.14275,0.14245,0.1424,0.1422,0.1421,0.1419,0.1418,0.1418,0.1417,0.1416,0.14135,0.14105,0.14085,0.1405,0.14025,0.14005,0.1397,0.1394,0.1393,0.139,0.13895,0.13865,0.1385,0.1384,0.13825,0.138,0.1379,0.1374,0.1371,0.13685,0.13665,0.13645,0.1364,0.1363,0.1362,0.13615,0.13615,0.13615,0.13605,0.136,0.136,0.1359,0.1356,0.13555,0.13525,0.13515,0.135,0.1348,0.13425,0.13385,0.1333,0.13275,0.13195,0.13035,0.1292,0.12785,0.12575,0.1228,0.11875,0.1128,0.1065,0.1015,0.0968,0.09395,0.09195,0.0907,0.08925,0.08815,0.08655,0.0844,0.08185,0.07965,0.0777,0.0755,0.07285,0.07065,0.06815,0.06385,0.05965,0.05565,0.0506,0.04565,0.04,0.0336,0.02495],
    'param08_raxml':[0.2746,0.1213,0.1213,0.1213,0.1213,0.1213,0.1213,0.1213,0.12115,0.12115,0.1211,0.1211,0.12095,0.12085,0.1208,0.1206,0.1206,0.12055,0.1205,0.12035,0.1202,0.12015,0.12005,0.12005,0.1199,0.1197,0.1196,0.11955,0.11945,0.1193,0.119,0.1188,0.1187,0.1185,0.1184,0.11825,0.11815,0.1179,0.11765,0.11745,0.1173,0.1172,0.11715,0.117,0.1168,0.1167,0.11655,0.1165,0.11645,0.11635,0.11625,0.11625,0.11615,0.11595,0.1159,0.1158,0.11575,0.11565,0.11555,0.1154,0.11535,0.11535,0.1152,0.11515,0.115,0.11495,0.1148,0.11445,0.1142,0.11405,0.11365,0.1129,0.1121,0.1105,0.10755,0.1033,0.0982,0.09235,0.0888,0.0858,0.08325,0.08165,0.0801,0.0788,0.0759,0.0702,0.06425,0.0588,0.05585,0.05385,0.05155,0.04855,0.04405,0.03825,0.0332,0.0304,0.0267,0.0227,0.01795,0.0134,0.0079],
    'param09_raxml':[0.27595,0.1628,0.1628,0.1628,0.1628,0.1628,0.1628,0.1628,0.1628,0.1627,0.16265,0.1626,0.1624,0.1624,0.16225,0.16215,0.16195,0.16195,0.1618,0.16165,0.16145,0.16135,0.16125,0.1612,0.1609,0.16075,0.16065,0.16045,0.1601,0.1599,0.15965,0.15965,0.1594,0.15935,0.15895,0.15895,0.15875,0.15855,0.1585,0.15825,0.15825,0.15815,0.158,0.158,0.15775,0.15755,0.15745,0.15725,0.15725,0.15705,0.1569,0.15685,0.15665,0.1566,0.15635,0.1562,0.15595,0.15585,0.1558,0.1557,0.1554,0.15515,0.15485,0.15465,0.15415,0.1533,0.15295,0.15205,0.1509,0.15015,0.14865,0.14735,0.14595,0.14415,0.14135,0.13815,0.13375,0.1286,0.1232,0.1173,0.1112,0.1064,0.1031,0.09865,0.09305,0.08315,0.0722,0.06125,0.0553,0.0517,0.04805,0.04475,0.0388,0.02925,0.022,0.0183,0.0152,0.01145,0.00865,0.00565,0.0031],
    'param10_raxml':[0.25805,0.163,0.163,0.163,0.163,0.163,0.16295,0.1629,0.1629,0.1628,0.1627,0.1624,0.16225,0.16215,0.162,0.16185,0.1617,0.16155,0.1615,0.1615,0.16125,0.1611,0.16105,0.1607,0.16045,0.1602,0.15995,0.1598,0.15975,0.15955,0.15915,0.1591,0.1587,0.15855,0.15805,0.1577,0.15745,0.1572,0.1571,0.1568,0.15665,0.15635,0.1562,0.156,0.15565,0.15545,0.1552,0.15515,0.15505,0.15485,0.1547,0.1546,0.15445,0.15415,0.1539,0.15385,0.15365,0.15335,0.1532,0.15295,0.1528,0.1525,0.1523,0.1518,0.15135,0.15035,0.14915,0.1483,0.147,0.145,0.14325,0.1411,0.13835,0.13565,0.13125,0.1266,0.11995,0.11325,0.10725,0.10245,0.0975,0.09345,0.09085,0.0884,0.0845,0.07965,0.0746,0.06955,0.0661,0.0636,0.0609,0.05795,0.0531,0.0471,0.0418,0.0383,0.033,0.0278,0.0227,0.01715,0.0107],
    'param11_raxml':[0.2323,0.15705,0.15705,0.15705,0.15705,0.15705,0.15705,0.15705,0.157,0.15685,0.1568,0.15655,0.1563,0.1562,0.15605,0.15565,0.15555,0.1554,0.15525,0.15505,0.15475,0.1547,0.15465,0.15465,0.15455,0.15445,0.15435,0.15425,0.15375,0.1535,0.15325,0.15325,0.15295,0.15275,0.15235,0.15215,0.1519,0.15165,0.15135,0.1511,0.15085,0.1506,0.1502,0.1501,0.14955,0.14935,0.149,0.1487,0.1485,0.14835,0.1482,0.14785,0.14765,0.14755,0.14725,0.1472,0.14675,0.1467,0.1466,0.14645,0.1462,0.1459,0.14555,0.14505,0.14445,0.14325,0.14205,0.1408,0.13945,0.13755,0.1355,0.13265,0.13005,0.12615,0.12165,0.11575,0.10955,0.10525,0.10115,0.09755,0.095,0.09315,0.0908,0.08905,0.08765,0.0858,0.08415,0.0822,0.0805,0.0788,0.07705,0.0749,0.0724,0.0678,0.0644,0.06,0.0556,0.0493,0.04395,0.03715,0.02825],
    'param12_raxml':[0.1778,0.13475,0.13475,0.13475,0.13475,0.13475,0.13475,0.13475,0.1347,0.13455,0.13445,0.13415,0.13405,0.13405,0.13385,0.13385,0.13365,0.13365,0.1336,0.1336,0.1334,0.13325,0.13315,0.13285,0.13255,0.1324,0.13225,0.13205,0.1318,0.13155,0.13135,0.13135,0.1311,0.1309,0.13065,0.13055,0.1302,0.13005,0.12965,0.1293,0.1292,0.12895,0.1288,0.12845,0.12815,0.12785,0.1277,0.12755,0.1273,0.12705,0.127,0.127,0.12665,0.1265,0.12645,0.12635,0.1261,0.126,0.1257,0.1254,0.12525,0.12495,0.12425,0.1237,0.12315,0.12205,0.121,0.1201,0.1193,0.11825,0.11695,0.1153,0.1128,0.1097,0.10645,0.10305,0.1007,0.0976,0.09525,0.0939,0.09315,0.09215,0.09105,0.0903,0.08975,0.0891,0.08865,0.088,0.0876,0.08715,0.08665,0.08615,0.0858,0.08505,0.08455,0.08335,0.08245,0.08055,0.0777,0.07265,0.06135],
    'param13_raxml':[0.14835,0.1217,0.1217,0.1217,0.1217,0.1217,0.1217,0.1217,0.12165,0.12165,0.1216,0.1216,0.1215,0.1214,0.1212,0.12105,0.12095,0.1208,0.12065,0.1205,0.12045,0.12015,0.1199,0.11965,0.1195,0.11935,0.1191,0.1189,0.11875,0.1186,0.1184,0.11805,0.118,0.1179,0.11775,0.11755,0.11735,0.11715,0.11685,0.1167,0.1165,0.1163,0.1161,0.1161,0.1159,0.11585,0.1156,0.11545,0.1152,0.115,0.1149,0.11485,0.1147,0.1146,0.11445,0.11425,0.1141,0.11405,0.11385,0.11375,0.1137,0.11355,0.1129,0.1125,0.1119,0.1115,0.11065,0.10965,0.10905,0.1084,0.1075,0.10645,0.10495,0.1032,0.10115,0.09915,0.09735,0.09575,0.0945,0.0934,0.0924,0.0918,0.0913,0.0908,0.0904,0.09005,0.0897,0.0894,0.08905,0.08885,0.0886,0.0885,0.08845,0.0883,0.08795,0.08765,0.08735,0.0871,0.0865,0.0849,0.0801],
    'param14_raxml':[0.1263,0.1101,0.1101,0.1101,0.1101,0.11005,0.11005,0.11005,0.11,0.10995,0.1099,0.10985,0.1098,0.1098,0.10965,0.1096,0.10945,0.1093,0.10915,0.10905,0.109,0.10895,0.1088,0.10865,0.10855,0.10845,0.10835,0.10815,0.1081,0.10795,0.10785,0.1078,0.10775,0.10765,0.1073,0.1071,0.10695,0.10695,0.1068,0.1068,0.10655,0.1065,0.1063,0.10605,0.10595,0.1058,0.1056,0.1053,0.10505,0.10495,0.10485,0.10475,0.10465,0.1044,0.10435,0.10425,0.10415,0.10395,0.1038,0.1036,0.10335,0.10315,0.1027,0.1025,0.10215,0.10155,0.1012,0.1007,0.10015,0.09955,0.0989,0.0984,0.09715,0.09635,0.09555,0.0944,0.09365,0.09295,0.0923,0.09175,0.09125,0.091,0.0907,0.09015,0.0899,0.0896,0.08915,0.08905,0.0889,0.0887,0.08865,0.08865,0.0886,0.08855,0.08855,0.0883,0.0882,0.08805,0.08765,0.0873,0.08605],
    'param15_raxml':[0.1123,0.10285,0.10285,0.10285,0.10285,0.10285,0.10285,0.10285,0.10285,0.1028,0.1028,0.10265,0.10245,0.10235,0.10235,0.10225,0.10205,0.10195,0.1018,0.10175,0.1016,0.1015,0.10145,0.10135,0.10125,0.10105,0.10095,0.10095,0.10085,0.1007,0.10055,0.10055,0.1004,0.1004,0.1001,0.09985,0.0998,0.0997,0.09955,0.09945,0.0994,0.09935,0.0993,0.09915,0.099,0.09875,0.0985,0.09845,0.0983,0.09815,0.09805,0.098,0.098,0.098,0.098,0.09795,0.0979,0.0978,0.0977,0.09765,0.0975,0.0974,0.09725,0.09695,0.09675,0.0965,0.0962,0.0958,0.09505,0.0946,0.09425,0.0938,0.0935,0.09315,0.09245,0.0916,0.0911,0.0905,0.09015,0.08995,0.08975,0.08935,0.08895,0.08885,0.08865,0.08835,0.08815,0.088,0.08785,0.0878,0.0877,0.0876,0.0876,0.0876,0.0876,0.0876,0.0876,0.0876,0.08755,0.08745,0.08695],
    'param16_raxml':[0.21545,0.14905,0.14905,0.14905,0.14905,0.14905,0.149,0.14885,0.14885,0.14885,0.1488,0.14865,0.14855,0.1485,0.14845,0.14835,0.1483,0.1481,0.14805,0.1479,0.1478,0.14745,0.1473,0.1472,0.14695,0.14665,0.1465,0.14635,0.1462,0.1459,0.14575,0.1457,0.1455,0.1454,0.1451,0.14485,0.14465,0.14435,0.14415,0.14385,0.1437,0.1436,0.1434,0.1431,0.14285,0.1427,0.14245,0.1423,0.1422,0.1418,0.14155,0.14135,0.14115,0.14095,0.14095,0.14095,0.1409,0.1407,0.1406,0.14025,0.14005,0.1399,0.13975,0.1392,0.13835,0.1374,0.13615,0.1349,0.1333,0.13155,0.12925,0.12705,0.1239,0.12085,0.1163,0.11155,0.1064,0.1021,0.09845,0.0962,0.09445,0.09295,0.0913,0.0898,0.0885,0.08715,0.0859,0.0844,0.0836,0.0825,0.08085,0.07975,0.0783,0.07605,0.0741,0.07135,0.0681,0.06325,0.05845,0.05075,0.03865],
    'param17_raxml':[0.2156,0.1477,0.1477,0.1477,0.1477,0.1477,0.1477,0.1477,0.1476,0.1476,0.14755,0.1474,0.1473,0.1472,0.147,0.14675,0.1466,0.1465,0.1463,0.1462,0.146,0.1459,0.1458,0.1456,0.1454,0.1453,0.14505,0.1449,0.14475,0.14455,0.14425,0.14395,0.14355,0.14335,0.14305,0.1427,0.14235,0.1422,0.14185,0.1414,0.14115,0.14085,0.14055,0.14025,0.13985,0.13945,0.13925,0.1391,0.13895,0.1387,0.1386,0.13855,0.13845,0.1382,0.1379,0.1377,0.1375,0.13735,0.13725,0.1371,0.13695,0.1368,0.13625,0.13565,0.13485,0.134,0.13305,0.13165,0.13,0.1279,0.12585,0.1239,0.12055,0.1175,0.1127,0.10875,0.1039,0.09995,0.09725,0.0945,0.0928,0.09115,0.0898,0.0884,0.0873,0.0861,0.0851,0.08425,0.08315,0.0824,0.08095,0.0798,0.0778,0.0749,0.07255,0.07,0.06705,0.06245,0.05695,0.0497,0.03795],
    'param18_raxml':[0.2108,0.14585,0.14585,0.14585,0.14585,0.1458,0.1458,0.1457,0.1456,0.14545,0.1454,0.14515,0.14495,0.1449,0.14475,0.14465,0.1444,0.14425,0.1439,0.1437,0.14355,0.1434,0.1432,0.14305,0.1428,0.14265,0.14255,0.14235,0.14225,0.14205,0.14195,0.1417,0.14145,0.1413,0.1411,0.1408,0.1405,0.14025,0.1399,0.13965,0.1395,0.1393,0.13895,0.1387,0.1384,0.1383,0.13805,0.13775,0.13745,0.1372,0.13705,0.13685,0.1368,0.13655,0.13635,0.13625,0.13605,0.136,0.13575,0.13565,0.13545,0.13515,0.1349,0.13455,0.1341,0.13335,0.1321,0.13065,0.12865,0.12675,0.1247,0.1226,0.12035,0.1165,0.11155,0.10665,0.1019,0.09775,0.0948,0.0925,0.0911,0.08995,0.0887,0.0876,0.0865,0.0857,0.0849,0.0841,0.08305,0.08195,0.0811,0.0801,0.078,0.07625,0.0741,0.07075,0.06675,0.06195,0.055,0.04745,0.0366],
    'param19_raxml':[0.2112,0.1459,0.1459,0.1459,0.1459,0.1459,0.1459,0.14585,0.1458,0.14565,0.1455,0.1454,0.14525,0.1449,0.1447,0.14465,0.14455,0.14445,0.14435,0.1442,0.14405,0.14395,0.1437,0.14345,0.1432,0.1429,0.14275,0.1425,0.14205,0.1419,0.14165,0.14145,0.14135,0.1412,0.14075,0.1406,0.1402,0.13985,0.13975,0.1393,0.1389,0.1386,0.13835,0.13815,0.13785,0.13765,0.13755,0.13745,0.13695,0.1367,0.1366,0.1366,0.1363,0.13615,0.13605,0.1359,0.1357,0.1355,0.13545,0.13535,0.13515,0.1349,0.1347,0.13415,0.13335,0.1326,0.1309,0.12975,0.1284,0.12685,0.12475,0.1231,0.1205,0.1161,0.112,0.10745,0.1024,0.099,0.09615,0.09445,0.0924,0.0907,0.0897,0.08865,0.08765,0.0866,0.08555,0.08495,0.0839,0.0822,0.08135,0.08025,0.07905,0.077,0.07465,0.0712,0.0675,0.06225,0.0559,0.04825,0.03855],
    'param20_raxml':[0.21265,0.1489,0.1489,0.1489,0.1489,0.1489,0.1489,0.1489,0.1489,0.14885,0.1488,0.1488,0.1488,0.14865,0.14845,0.1483,0.1481,0.148,0.1479,0.14775,0.14765,0.1475,0.14745,0.1473,0.14705,0.1466,0.14615,0.14605,0.14565,0.14545,0.1454,0.1451,0.14485,0.1447,0.14445,0.1442,0.1441,0.1437,0.14345,0.1432,0.14295,0.1427,0.14235,0.14205,0.1416,0.1415,0.14145,0.14125,0.1411,0.14105,0.14065,0.1404,0.14035,0.14015,0.14005,0.1399,0.1396,0.1395,0.13935,0.1393,0.13905,0.1388,0.13855,0.1382,0.1371,0.13615,0.1347,0.1335,0.1317,0.13015,0.1283,0.12575,0.1233,0.1183,0.1142,0.1093,0.10425,0.1001,0.09765,0.09615,0.09425,0.09265,0.09155,0.09055,0.08965,0.0882,0.0871,0.0857,0.0847,0.08385,0.0828,0.0817,0.07985,0.07765,0.07535,0.0722,0.0676,0.06305,0.0561,0.04865,0.03805],
    'param21_raxml':[0.3249,0.27955,0.27955,0.27955,0.27955,0.27955,0.27955,0.27955,0.2795,0.2795,0.27945,0.27945,0.2794,0.2794,0.27935,0.2793,0.2793,0.2793,0.2793,0.27925,0.2792,0.2792,0.27915,0.27915,0.27915,0.27915,0.2791,0.2791,0.27905,0.27905,0.27895,0.27885,0.27885,0.27885,0.27885,0.27885,0.2788,0.2787,0.2786,0.2785,0.2784,0.27825,0.278,0.27785,0.27775,0.27765,0.27745,0.2774,0.2774,0.2774,0.2774,0.2774,0.2774,0.2774,0.27735,0.27725,0.2772,0.2772,0.2772,0.27715,0.27715,0.27715,0.27715,0.2771,0.2771,0.27695,0.27695,0.27695,0.27695,0.2768,0.27675,0.27675,0.2767,0.27645,0.2758,0.2739,0.2702,0.2653,0.25785,0.2511,0.24595,0.24285,0.24075,0.23825,0.2351,0.2287,0.22065,0.21285,0.2052,0.1959,0.1864,0.1781,0.1667,0.15305,0.1384,0.12425,0.1081,0.0891,0.0698,0.0473,0.0215],
    'param22_raxml':[0.26345,0.21925,0.21925,0.21925,0.21925,0.2192,0.2192,0.2192,0.2192,0.2192,0.21915,0.21915,0.2191,0.21905,0.21895,0.21885,0.21885,0.2188,0.2188,0.21875,0.21875,0.2187,0.2187,0.21865,0.21865,0.21855,0.21855,0.21855,0.2185,0.2185,0.21845,0.2184,0.21835,0.21835,0.21835,0.21835,0.2183,0.2183,0.2182,0.2182,0.2182,0.21815,0.21805,0.218,0.218,0.21795,0.2178,0.21765,0.2176,0.2176,0.21755,0.2175,0.2175,0.2175,0.21745,0.2174,0.2174,0.21735,0.21735,0.21735,0.21735,0.21735,0.2173,0.2173,0.2173,0.2172,0.21715,0.2171,0.2167,0.21635,0.2161,0.21585,0.21545,0.2148,0.2133,0.2109,0.208,0.2053,0.20215,0.19895,0.1964,0.1945,0.1936,0.1924,0.19035,0.1871,0.18365,0.18045,0.17595,0.1704,0.16425,0.15895,0.15235,0.14255,0.13465,0.12475,0.1128,0.09985,0.08445,0.0665,0.0408],
    'param23_raxml':[0.2358,0.16625,0.16625,0.16625,0.16625,0.16625,0.16625,0.1662,0.166,0.16595,0.1659,0.1658,0.16565,0.16535,0.1652,0.165,0.16475,0.1645,0.16425,0.16405,0.1637,0.1634,0.1631,0.1628,0.16255,0.16235,0.16185,0.1616,0.16105,0.1607,0.16005,0.15955,0.1592,0.1588,0.15835,0.1574,0.1566,0.15635,0.15595,0.15545,0.15495,0.15445,0.1538,0.15345,0.153,0.1527,0.15225,0.1517,0.1512,0.15055,0.15005,0.1498,0.1494,0.14895,0.1485,0.14775,0.14725,0.14695,0.14635,0.1459,0.1452,0.14425,0.1429,0.1412,0.1391,0.13585,0.133,0.1293,0.126,0.12195,0.11835,0.11415,0.1084,0.103,0.09595,0.08765,0.0795,0.0741,0.06845,0.0624,0.05755,0.05305,0.04895,0.04555,0.0423,0.0392,0.0367,0.03485,0.0336,0.0321,0.0311,0.03055,0.02995,0.02955,0.029,0.02805,0.0269,0.0254,0.02345,0.02085,0.01765],
    'param24_raxml':[0.2774,0.21725,0.21725,0.21725,0.21725,0.21725,0.21725,0.2172,0.21715,0.2171,0.2169,0.21665,0.21645,0.21625,0.216,0.2159,0.21585,0.21575,0.21535,0.21515,0.21485,0.21465,0.2143,0.214,0.2138,0.21345,0.21305,0.2125,0.21205,0.21175,0.2113,0.2108,0.2104,0.20985,0.2094,0.20885,0.2082,0.20775,0.20725,0.20665,0.2061,0.20575,0.2052,0.2045,0.20405,0.20345,0.203,0.20235,0.2016,0.2009,0.2003,0.19965,0.19895,0.1983,0.1979,0.1972,0.1968,0.1961,0.1954,0.1945,0.1932,0.19195,0.18935,0.1861,0.18275,0.17945,0.176,0.171,0.1665,0.16105,0.15555,0.14865,0.14255,0.13455,0.12645,0.1185,0.10995,0.1005,0.0923,0.08355,0.07475,0.06625,0.0584,0.0516,0.04455,0.038,0.0324,0.02815,0.0235,0.0196,0.0171,0.01455,0.01275,0.01165,0.01075,0.0099,0.0093,0.00875,0.00785,0.0071,0.00605],
}

# [0, 0.01, 0.02, ..., 1], for x values
x = np.arange(0,1.0,1.0/len(y_estimate_cherries_sh['param00_fasttree']))

# true values
y_estimate_cherries_sh['param00_true'] = [0.0902]*len(x)
y_estimate_cherries_sh['param01_true'] = [0.3317]*len(x)
y_estimate_cherries_sh['param02_true'] = [0.2234]*len(x)
y_estimate_cherries_sh['param03_true'] = [0.0289]*len(x)
y_estimate_cherries_sh['param04_true'] = [0.01005]*len(x)
y_estimate_cherries_sh['param05_true'] = [0.09275]*len(x)
y_estimate_cherries_sh['param06_true'] = [0.0915]*len(x)
y_estimate_cherries_sh['param07_true'] = [0.08995]*len(x)
y_estimate_cherries_sh['param08_true'] = [0.08675]*len(x)
y_estimate_cherries_sh['param09_true'] = [0.0909]*len(x)
y_estimate_cherries_sh['param10_true'] = [0.09005]*len(x)
y_estimate_cherries_sh['param11_true'] = [0.0894]*len(x)
y_estimate_cherries_sh['param12_true'] = [0.0899]*len(x)
y_estimate_cherries_sh['param13_true'] = [0.0904]*len(x)
y_estimate_cherries_sh['param14_true'] = [0.0898]*len(x)
y_estimate_cherries_sh['param15_true'] = [0.08885]*len(x)
y_estimate_cherries_sh['param16_true'] = [0.09025]*len(x)
y_estimate_cherries_sh['param17_true'] = [0.08865]*len(x)
y_estimate_cherries_sh['param18_true'] = [0.08705]*len(x)
y_estimate_cherries_sh['param19_true'] = [0.0892]*len(x)
y_estimate_cherries_sh['param20_true'] = [0.0899]*len(x)
y_estimate_cherries_sh['param21_true'] = [0.33175]*len(x)
y_estimate_cherries_sh['param22_true'] = [0.22575]*len(x)
y_estimate_cherries_sh['param23_true'] = [0.03135]*len(x)
y_estimate_cherries_sh['param24_true'] = [0.0101]*len(x)

### FASTTREE PLOTS ###

# create plot of cherry deviation vs. r (with different lambda = lambdaA+lambdaB to keep expected branch length constant)
fig = plt.figure()
for i in ['04','03','00','02','01']:
    p = 'param' + i
    r = {'04':0.0001, '03':0.001, '00':0.01, '02':0.1, '01':1}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_fasttree'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'$r = $' + str(r) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title(r'FastTree Estimated Cherry Fraction  for $r\ \left(E(l_b)=0.298\right)$',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_r_const-exp-branch-length_fasttree.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. r (with constant lambda = lambdaA + lambdaB)
fig = plt.figure()
for i in ['24','23','00','22','21']:
    p = 'param' + i
    r = {'24':0.0001, '23':0.001, '00':0.01, '22':0.1, '21':1}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_fasttree'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'$r = $' + str(r) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title(r'FastTree Estimated Cherry Fraction  for $r\ \left(\lambda = \lambda_A + \lambda_B = 169\right)$',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_r_const-lambda_fasttree.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. lambda
fig = plt.figure()
for i in ['05','06','00','07','08']:
    p = 'param' + i
    l = {'05':33.866, '06':84.664, '00':169.328, '07':338.655, '08':846.638}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_fasttree'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'$\lambda = $' + str(l) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title(r'FastTree Estimated Cherry Fraction  for $\lambda$',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_lambda_fasttree.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. length
fig = plt.figure()
for i in ['09','10','11','00','12','13','14','15']:
    p = 'param' + i
    k = {'09':50, '10':100, '11':200, '00':300, '12':600, '13':1200, '14':2400, '15':4800}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_fasttree'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = 'Sequence Length = ' + str(k) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title('FastTree Estimated Cherry Fraction  for Sequence Length',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_length_fasttree.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. gamma rate
fig = plt.figure()
for i in ['16','17','00','18','19']:
    p = 'param' + i
    g = {'16':2.952, '17':5.904, '00':29.518, '18':147.591, '19':295.182}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_fasttree'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'Gamma Distribution Rate $\alpha = $' + str(g) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title('FastTree Estimated Cherry Fraction  for Deviation from Ultrametricity',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_gammarate_fasttree.png', bbox_inches='tight')
plt.close()

### RAxML PLOTS ###

# create plot of cherry deviation vs. r (with different lambda = lambdaA+lambdaB to keep expected branch length constant)
fig = plt.figure()
for i in ['04','03','00','02','01']:
    p = 'param' + i
    r = {'04':0.0001, '03':0.001, '00':0.01, '02':0.1, '01':1}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_raxml'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'$r = $' + str(r) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title(r'RAxML Estimated Cherry Fraction for $r\ \left(E(l_b)=0.298\right)$',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_r_const-exp-branch-length_raxml.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. r (with constant lambda = lambdaA + lambdaB)
fig = plt.figure()
for i in ['24','23','00','22','21']:
    p = 'param' + i
    r = {'24':0.0001, '23':0.001, '00':0.01, '22':0.1, '21':1}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_raxml'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'$r = $' + str(r) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title(r'RAxML Estimated Cherry Fraction for $r\ \left(\lambda = \lambda_A + \lambda_B = 169\right)$',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_r_const-lambda_raxml.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. lambda
fig = plt.figure()
for i in ['05','06','00','07','08']:
    p = 'param' + i
    l = {'05':33.866, '06':84.664, '00':169.328, '07':338.655, '08':846.638}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_raxml'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'$\lambda = $' + str(l) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title(r'RAxML Estimated Cherry Fraction for $\lambda$',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_lambda_raxml.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. length
fig = plt.figure()
for i in ['09','10','11','00','12','13','14','15']:
    p = 'param' + i
    k = {'09':50, '10':100, '11':200, '00':300, '12':600, '13':1200, '14':2400, '15':4800}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_raxml'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = 'Sequence Length = ' + str(k) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title('RAxML Estimated Cherry Fraction for Sequence Length',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_length_raxml.png', bbox_inches='tight')
plt.close()

# create plot of cherry deviation vs. gamma rate
fig = plt.figure()
for i in ['16','17','00','18','19']:
    p = 'param' + i
    g = {'16':2.952, '17':5.904, '00':29.518, '18':147.591, '19':295.182}[i]
    y = np.log10([y_estimate_cherries_sh[p+'_raxml'][j] / y_estimate_cherries_sh[p+'_true'][j] for j in range(len(x))])
    label = r'Gamma Distribution Rate $\alpha = $' + str(g) + " (estimate-cherries.sh)"
    plt.plot(x,y,label=label)
plt.xticks(axisX)
sns.plt.xlabel('Support Threshold',fontsize=14)
sns.plt.ylabel(r'$\log_{10}{\frac{Estimated}{True}}$',fontsize=14)
sns.plt.title('RAxML Estimated Cherry Fraction for Deviation from Ultrametricity',fontsize=18,y=1.05)
plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)
sns.plt.show()
fig.savefig('cherry-deviation_vs_threshold_gammarate_raxml.png', bbox_inches='tight')
plt.close()